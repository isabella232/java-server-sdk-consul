
buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
}

plugins {
    id "java"
    id "java-library"
    id "checkstyle"
    id "signing"
    id "com.github.johnrengelman.shadow" version "2.0.4"
    id "maven-publish"
    id "de.marcphilipp.nexus-publish" version "0.3.0"
    id "io.codearte.nexus-staging" version "0.21.2"
    id "org.ajoberstar.git-publish" version "2.1.3"
    id "idea"
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

configurations.all {
    // check for updates every build for dependencies with: 'changing: true'
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

repositories {
    mavenLocal()
    // Before LaunchDarkly release artifacts get synced to Maven Central they are here along with snapshots:
    maven { url "https://oss.sonatype.org/content/groups/public/" }
    mavenCentral()
}

allprojects {
    group = 'com.launchdarkly'
    version = "${version}"
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

ext {
    sdkBasePackage = "com.launchdarkly.client.consul"
    sdkBaseName = "launchdarkly-java-server-sdk-consul-store"
}

ext.libraries = [:]

// Add dependencies to "libraries.internal" that are not exposed in our public API. These
// will be embedded with shaded names in the uberjar.
libraries.internal = [
    //"com.google.guava:guava:19.0"
]

// Add dependencies to "libraries.external" that are exposed in our public API, or that have
// global state that must be shared between the SDK and the caller. These are not embedded
// in the uberjar; the caller must provide them on the classpath at runtime.
libraries.external = [
    "com.launchdarkly:launchdarkly-java-server-sdk:4.12.0",
    "com.orbitz.consul:consul-client:1.3.0",
    "org.slf4j:slf4j-api:1.7.21"
]

// Add dependencies to "libraries.test" that are used only in unit tests.
libraries.test = [
    "org.hamcrest:hamcrest-all:1.3",
    "junit:junit:4.12",
    "ch.qos.logback:logback-classic:1.1.7",
    "com.launchdarkly:launchdarkly-java-server-sdk:4.12.0:test" // our unit tests use helper classes from the SDK
]

dependencies {
    implementation libraries.internal
    compileClasspath libraries.external
    runtime libraries.internal
    testImplementation libraries.test, libraries.internal, libraries.external

    // Unlike what the name might suggest, the "shadow" configuration specifies dependencies that
    // should *not* be shaded by the Shadow plugin when we build our shaded jars.
    shadow libraries.external
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

shadowJar {
    baseName = sdkBaseName
    
    // No classifier means that the shaded jar becomes the default artifact
    classifier = ''

    manifest {
        attributes("Implementation-Version": version)
    }
}

task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
    prefix = "com.launchdarkly.shaded"
}

tasks.shadowJar.dependsOn tasks.relocateShadowJar

artifacts {
    archives sourcesJar, javadocJar, shadowJar
}

test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        showStandardStreams = true
        exceptionFormat = 'full'
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

nexusStaging {
    packageGroup = "com.launchdarkly"
}

def pomConfig = {
    name 'LaunchDarkly Java SDK Consul integration'
    packaging 'jar'
    url 'https://github.com/launchdarkly/java-server-sdk-consul'

    licenses {
        license {
            name 'The Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
        }
    }

    developers {
        developer {
            id 'jkodumal'
            name 'John Kodumal'
            email 'john@launchdarkly.com'
        }
    }

    scm {
        connection 'scm:git:git://github.com/launchdarkly/java-server-sdk-consul.git'
        developerConnection 'scm:git:ssh:git@github.com:launchdarkly/java-server-sdk-consul.git'
        url 'https://github.com/launchdarkly/java-server-sdk-consul'
    }
}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)

            artifactId = sdkBaseName
            artifact sourcesJar
            artifact javadocJar
            
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Consul-backed feature store for the LaunchDarkly Java SDK')
                asNode().children().last() + pomConfig
            }
        }
    }
    repositories {
        mavenLocal()
    }
}

nexusPublishing {
    clientTimeout = java.time.Duration.ofMinutes(2) // we've seen extremely long delays in creating repositories
    repositories {
        sonatype {
            username = ossrhUsername
            password = ossrhPassword            
        }
    }
}

signing {
    sign publishing.publications.shadow
}

gitPublish {
    repoUri = 'git@github.com:launchdarkly/java-server-sdk-consul.git'
    branch = 'gh-pages'
    contents {
        from javadoc
    }
    commitMessage = 'publishing javadocs'
}
